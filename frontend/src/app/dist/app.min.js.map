{"version":3,"sources":["app.modules.js","app.routes.js","controllers/AdministratorDashboardController.js","controllers/BasePageController.js","controllers/DashboardController.js","controllers/EditConferenceAdminController.js","controllers/EditConferenceController.js","controllers/ForgotPasswordController.js","controllers/HomePageController.js","controllers/NewConferenceController.js","controllers/NewUserController.js","filters/reverse.js","services/CryptoService.js","services/LoginService.js","services/RestApi.js","controllers/forms/DelegateInformationFormController.js","controllers/forms/GaCrisisFormController.js","controllers/forms/MedicalHistoryFormController.js","controllers/forms/RegistrationFormController.js","controllers/forms/TravelArrangementFormController.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["angular\n    .module( 'app', [\n        'ui.router',\n        'ngCookies',\n        'ngLodash'\n    ]);\n\nangular\n    .module( 'app' );\n","angular.module( 'app' )\n       .config( [ '$urlRouterProvider', '$stateProvider', ( $urlRouterProvider, $stateProvider ) => {\n\n           $urlRouterProvider.otherwise( '/' );\n\n           $stateProvider\n               .state( 'home', {\n\n                   url: '/',\n                   templateUrl: 'app/templates/homepage.html',\n\n               })\n               .state( 'forgot', {\n\n                   url: '/forgot',\n                   templateUrl: 'app/templates/forgot-password.html',\n\n               })\n               .state( 'dashboard', {\n\n                   url: '/dashboard',\n                   templateUrl: 'app/templates/dashboard.html',\n\n               })\n               .state( 'newConference', {\n\n                   url: '/conferences/new',\n                   templateUrl: 'app/templates/new-conference.html',\n\n               })\n               .state( 'editConference', {\n\n                   url: '/conferences/:guid',\n                   templateUrl: 'app/templates/edit-conference.html',\n\n               })\n               .state( 'registrationForm', {\n\n                   url: '/conferences/:guid/registration',\n                   templateUrl: 'app/templates/forms/registration.html',\n\n               })\n               .state( 'delegateInformationForm', {\n\n                   url: '/conferences/:guid/delegates',\n                   templateUrl: 'app/templates/forms/delegate-information.html',\n\n               })\n               .state( 'travelArrangementsForm', {\n\n                   url: '/conferences/:guid/travel',\n                   templateUrl: 'app/templates/forms/travel-arrangements.html',\n\n               })\n               .state( 'gaCrisisForm', {\n\n                   url: '/conferences/:guid/ga',\n                   templateUrl: 'app/templates/forms/ga-crisis.html',\n\n               })\n               .state( 'dashboardAdmin', {\n\n                   url: '/dashboard/admin',\n                   templateUrl: 'app/templates/dashboard-admin.html',\n\n               })\n               .state( 'editConferenceAdmin', {\n\n                   url: '/dashboard/edit/conferences/:guid',\n                   templateUrl: 'app/templates/edit-conference-admin.html',\n\n               })\n               .state( 'addNewUser', {\n\n                   url: '/dashboard/users/new',\n                   templateUrl: 'app/templates/new-user.html',\n\n               });\n\n       }]);\n","angular.module( 'app' )\n        .controller( 'AdministratorDashboardController', [ 'RestApiService', '$cookies', '$state', '$window', '$scope', function( $rest, $cookies, $state, $window, $scope ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( valid.valid ) {\n\n                       if( data.role === 1 ) {\n\n                           $state.go( 'dashboardAdmin' );\n\n                       } else {\n\n                           $state.go( 'dashboard' );\n\n                       }\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            this.sortType = 'isConfirmed';\n            this.sortReverse = false;\n\n            this.ChangeSort = ( sortTypeNew ) => {\n\n               if( sortTypeNew === this.sortType ) {\n                   this.sortReverse = !this.sortReverse;\n               } else {\n                   this.sortType = sortTypeNew;\n               }\n\n            };\n\n            this.RefreshView = () => {\n\n                this.isProcessing = true;\n\n                let processingOne = true\n                  , processingTwo = true;\n\n                $rest.GetAllUsers( {\n\n                   token: data.token,\n\n                } ).then( ( data ) => {\n\n                    processingOne = false;\n                    this.isProcessing = ( processingOne || processingTwo );\n\n                   this.users = [];\n                   data.filter( ( user ) => {\n\n                       if( user.role !== 1 ) this.users.push( user );\n\n                   } );\n\n                } );\n\n                $rest.GetAllConferencesForAllUsers( data ).then( ( dbData ) => {\n\n                    processingTwo = false;\n                    this.isProcessing = ( processingOne || processingTwo );\n\n                   this.allConferences = [];\n\n                   dbData.map( ( conference ) => {\n\n                       conference.areFormsFilled = ( () => {\n\n                           return ( conference.registration && conference.delegateInformation && conference.travelArrangements && conference.gaCrisis && conference.registration.isFormFilled && conference.delegateInformation.isFormFilled && conference.travelArrangements.isFormFilled && conference.gaCrisis.isFormFilled )\n\n                       } )();\n\n                       this.allConferences.push( conference );\n\n                   } );\n\n                } );\n\n            };\n\n            this.DeleteConference  = ( conferenceGuid ) => {\n\n                this.isProcessing = true;\n\n                $rest.DeleteConference( {\n\n                    guid: data.guid,\n                    token: data.token,\n                    conferenceGuid,\n\n                } ).then( ( res ) => {\n\n                    this.isProcessing = false;\n\n                    this.hasButtonMessage = true;\n                    this.buttonMessage = \"Conference confirmed!\";\n                    this.hasMessage = true;\n                    this.messageClass = {\n                        blue: true\n                    };\n                    this.messageText = \"Conference confirmed!\";\n\n                    $window.location.reload();\n\n                } ).catch( ( err ) => {\n\n                    this.isProcessing = false;\n\n                    this.hasMessage = true;\n                    this.messageClass = {\n                        red: true\n                    };\n                    this.messageText = \"An error was encountered while executing that operation!\";\n\n                } );\n\n            };\n\n            this.ConfirmConference = ( guid ) => {\n\n               this.isProcessing = true;\n\n               $rest.ConfirmConference( {\n\n                   guid: data.guid,\n                   token: data.token,\n                   conferenceGuid: guid\n\n               } ).then( ( dbData ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasButtonMessage = true;\n                   this.buttonMessage = \"Conference confirmed!\";\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       blue: true\n                   };\n                   this.messageText = \"Conference confirmed!\";\n\n                   $window.location.reload();\n\n               } ).catch( ( err ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       red: true\n                   };\n                   this.messageText = \"An error was encountered while executing that operation!\";\n\n               } );\n\n            };\n\n            this.UnconfirmConference = ( guid ) => {\n\n               this.isProcessing = true;\n\n               $rest.UnconfirmConference( {\n\n                   guid: data.guid,\n                   token: data.token,\n                   conferenceGuid: guid\n\n               } ).then( ( dbData ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasButtonMessage = true;\n                   this.buttonMessage = \"Conference unconfirmed!\";\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       blue: true\n                   };\n                   this.messageText = \"Conference unconfirmed!\";\n\n                   $window.location.reload();\n\n\n               } ).catch( ( err ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       red: true\n                   };\n                   this.messageText = \"An error was encountered while executing that operation!\";\n\n               } );\n\n            };\n\n            this.RefreshView();\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'BasePageController', [ '$cookies', '$state', '$window', 'RestApiService', function( $cookies, $state, $window, $rest ) {\n\n            const data = $cookies.get( 'loginData' );\n\n            this.showLogout = $cookies.get( 'isLoggedIn' ) && data;\n            this.Logout = () => {\n\n                const promise = $rest.Logout( JSON.parse( data ) );\n                promise.then( ( data ) => {\n\n                    $cookies.remove( 'isLoggedIn' );\n                    $cookies.remove( 'loginData' );\n\n                    this.showLogout = false;\n                    $state.go( 'home' );\n\n                } ).catch( ( err ) => {\n\n                    $cookies.remove( 'isLoggedIn' );\n                    $cookies.remove( 'loginData' );\n\n                    this.showLogout = false;\n                    $state.go( 'home' );\n\n                } );\n\n            };\n\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'DashboardController', [ 'RestApiService', '$cookies', '$state', function( $rest, $cookies, $state ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            $rest.GetUnconfirmedCount( data ).then( ( dat ) => {\n\n               this.shouldAddNewButton = dat.data.count === 0;\n\n            } );\n\n            let dataPromise = $rest.GetUser( data );\n            dataPromise.then( ( dataOut ) => {\n\n               this.data = dataOut;\n\n\n            } ).catch( ( data ) => {\n\n               console.error( 'The application failed to load with the provided parameters; trying to reload internal state.' );\n\n            } );\n\n            dataPromise = $rest.GetAllConferences( data );\n            dataPromise.then( ( dataIn ) => {\n\n               this.hasConferences = ( dataIn.length !== 0 );\n               this.conferences = {\n                   count: dataIn.length,\n                   data: dataIn\n               };\n\n            } ).catch( ( data ) => {\n\n               console.error( 'The application failed to load with the provided parameters; trying to reload internal state.' );\n               $state.go( 'home' );\n\n            } );\n\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'EditConferenceAdminController', [ '$stateParams', '$cookies', '$http', '$state', '$window', 'RestApiService', function( $stateParams, $cookies, $http, $state, $window, $rest ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            const conferenceGuid = $stateParams.guid;\n\n            this.guid = conferenceGuid;\n\n            this.ConfirmConference = ( guid ) => {\n\n               this.isProcessing = true;\n\n               $rest.ConfirmConference( {\n\n                   guid: data.guid,\n                   token: data.token,\n                   conferenceGuid: guid\n\n               } ).then( ( dbData ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       blue: true\n                   };\n                   this.messageText = \"Conference confirmed!\";\n\n               } ).catch( ( err ) => {\n\n                   this.isProcessing = false;\n\n                   this.hasMessage = true;\n                   this.messageClass = {\n                       red: true\n                   };\n                   this.messageText = \"An error was encountered while executing that operation!\";\n\n               } );\n\n            };\n\n            this.AddCountryAllotment = () => {\n\n               if( this.conferenceData.countryAllotment && this.conferenceData.countryAllotment.countries && this.conferenceData.countryAllotment.countries.length === 5 ) {\n\n                   this.isMessage = true;\n                   this.messageHeader = \"Warning!\";\n                   this.messageText = \"You can not add any more delegates. The maximum number of delegates per delegation is 5.\";\n                   this.messageClass = {\n\n                       'yellow': true,\n\n                   };\n\n                   return false;\n\n               }\n\n               this.conferenceData.countryAllotment = ( () => {\n\n                   return (\n\n                       ( this.conferenceData.countryAllotment ) ? ( ( this.conferenceData.countryAllotment.countries ) ? this.conferenceData.countryAllotment : { countries: [] } ) : { countries: [] }\n\n                   )\n\n               } )();\n\n               this.conferenceData.countryAllotment.countries.push( {\n\n                   name: 'Country Name'\n\n               } );\n\n            };\n\n            this.AddAnnouncement = () => {\n\n                this.conferenceData.announcements = this.conferenceData.announcements || {\n                    notifications: []\n                };\n\n                this.conferenceData.announcements.notifications.push( {\n\n                    text: 'Notification',\n                    name: 'New Notification'\n\n                } );\n\n            };\n\n            this.AddGADelegate = () => {\n\n               if( this.conferenceData.gaCrisis && this.conferenceData.gaCrisis.delegates && this.conferenceData.gaCrisis.delegates.length === 7 ) {\n\n                   this.isMessage = true;\n                   this.messageHeader = \"Warning!\";\n                   this.messageText = \"You can not add any more delegates. The maximum number of delegates per delegation is 7.\";\n                   this.messageClass = {\n\n                       'yellow': true,\n\n                   };\n\n                   return false;\n\n               }\n\n               this.conferenceData.gaCrisis = ( () => {\n\n                   return (\n\n                       ( this.conferenceData.gaCrisis ) ? ( ( this.conferenceData.gaCrisis.delegates ) ? this.conferenceData.gaCrisis : { delegates: [] } ) : { delegates: [] }\n\n                   )\n\n               } )();\n\n               this.conferenceData.gaCrisis.delegates.push( {\n\n                   name: 'Delegate Name'\n\n               } );\n\n            };\n\n            this.AddDelegate = () => {\n\n               if( this.conferenceData.delegateInformation && this.conferenceData.delegateInformation.delegates && this.conferenceData.delegateInformation.delegates.length === 17 ) {\n\n                   this.isMessage = true;\n                   this.messageHeader = \"Warning!\";\n                   this.messageText = \"You can not add any more delegates. The maximum number of delegates per delegation is 17.\";\n                   this.messageClass = {\n\n                       'yellow': true,\n\n                   };\n\n                   return false;\n\n               }\n\n               this.conferenceData.delegateInformation = ( () => {\n\n                   return (\n\n                       ( this.conferenceData.delegateInformation ) ? ( ( this.conferenceData.delegateInformation.delegates ) ? this.conferenceData.delegateInformation : { delegates: [] } ) : { delegates: [] }\n\n                   )\n\n               } )();\n\n               this.conferenceData.delegateInformation.delegates.push( {\n\n                   name: 'Delegate Name'\n\n               } );\n\n            };\n\n            this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: this.guid,\n                   data: this.conferenceData\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n            };\n\n            this.RefreshView = () => {\n\n                this.isReloading = true;\n\n                $rest.GetConference( {\n\n                   conferenceGuid,\n                   token: data.token,\n                   guid: data.guid,\n\n                } ).then( ( dataDb ) => {\n\n                   this.conferenceData = dataDb;\n                   this.isReloading = false;\n\n                   this.fieldClasses = {\n\n                       'two fields': ( this.conferenceData.countryAllotment ),\n                       'field': ( !this.conferenceData.countryAllotment )\n\n                   };\n\n                   if( this.conferenceData.travelArrangements ) {\n\n                       if( this.conferenceData.travelArrangements.onward ) {\n\n                           if( this.conferenceData.travelArrangements.onward.arrivalDate ) {\n                               this.conferenceData.travelArrangements.onward.arrivalDate = new Date( this.conferenceData.travelArrangements.onward.arrivalDate );\n                           }\n\n                           if( this.conferenceData.travelArrangements.onward.departureDate ) {\n                               this.conferenceData.travelArrangements.onward.departureDate = new Date( this.conferenceData.travelArrangements.onward.departureDate );\n                           }\n\n                       }\n\n                       if( this.conferenceData.travelArrangements.returnJourney ) {\n\n                           if( this.conferenceData.travelArrangements.returnJourney.arrivalDate ) {\n                               this.conferenceData.travelArrangements.returnJourney.arrivalDate = new Date( this.conferenceData.travelArrangements.returnJourney.arrivalDate );\n                           }\n\n                           if( this.conferenceData.travelArrangements.returnJourney.departureDate ) {\n                               this.conferenceData.travelArrangements.returnJourney.departureDate = new Date( this.conferenceData.travelArrangements.returnJourney.departureDate );\n                           }\n\n                       }\n\n                   }\n\n                   this.isConferenceConfirmed = this.conferenceData.isConfirmed;\n                   this.areFormsFilled = ( () => {\n\n                       return ( this.conferenceData.registration && this.conferenceData.delegateInformation && this.conferenceData.travelArrangements && this.conferenceData.gaCrisis && this.conferenceData.registration.isFormFilled && this.conferenceData.delegateInformation.isFormFilled && this.conferenceData.travelArrangements.isFormFilled && this.conferenceData.gaCrisis.isFormFilled )\n\n                   } )();\n\n                } );\n\n            };\n\n            this.RefreshView();\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'EditConferenceController', [ '$stateParams', '$cookies', '$http', '$state', '$window', 'RestApiService', function( $stateParams, $cookies, $http, $state, $window, $rest ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            const conferenceGuid = $stateParams.guid;\n            this.guid = conferenceGuid;\n\n            $rest.GetConference( {\n\n               conferenceGuid,\n               token: data.token,\n               guid: data.guid,\n\n            } ).then( ( data ) => {\n\n               this.conferenceData = data;\n\n               this.isAllDone = ( () => {\n\n                   return ( this.conferenceData.registration && this.conferenceData.delegateInformation && this.conferenceData.travelArrangements && this.conferenceData.gaCrisis && this.conferenceData.registration.isFormFilled && this.conferenceData.delegateInformation.isFormFilled && this.conferenceData.travelArrangements.isFormFilled && this.conferenceData.gaCrisis.isFormFilled )\n\n               } )();\n\n            } );\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'ForgotPasswordController', [ 'RestApiService', '$state', '$cookies', '$window', function( $restApi, $state, $cookies, $window ) {\n\n            this.Execute = () => {\n\n               this.processing = true;\n\n               const resultPromise = $restApi.ForgotPassword( this.user );\n\n               resultPromise.then( ( dataForgot ) => {\n\n                   this.processing = false;\n\n                   this.hasMessage = true;\n                   this.messageText = \"An email outling the steps to reset your password has been sent. Check your email!\";\n                   this.messageClass = {\n\n                       blue: true\n\n                   };\n\n               } ).catch( ( dataError ) => {\n\n                   this.processing = false;\n\n                   if( dataError.error ) {\n\n                       this.hasMessage = true;\n                       this.messageText = dataError.message;\n                       this.messageClass = {\n                           red: true\n                       }\n\n                   }\n\n               } );\n\n            }\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'HomePageController', [ 'RestApiService', '$state', '$cookies', '$window', function( $rest, $state, $cookies, $window ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            this.Login = () => {\n\n                this.isProcessing = true;\n\n                const resultPromise = $rest.Login( this.user );\n\n                resultPromise.then( ( dataLogin ) => {\n\n                    this.hasButtonMessage = true;\n                    this.buttonMessage = \"Redirecting to dashboard...\";\n\n                    $cookies.put( 'loginData', JSON.stringify( dataLogin ) );\n                    $cookies.put( 'isLoggedIn', true );\n\n                    if( dataLogin.role === 1 ) {\n\n                        $state.go( 'dashboardAdmin' );\n\n                    } else {\n\n                        $state.go( 'dashboard' );\n\n                    }\n\n                } ).catch( ( dataError ) => {\n\n                    this.isProcessing = false;\n\n                    if( dataError.loggedIn === false ) {\n\n                        this.hasMessage = true;\n                        this.messageText = dataError.message;\n                        this.messageClass = {\n                            red: true\n                        }\n\n                    }\n\n                } );\n\n            }\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'NewConferenceController', [ '$cookies', '$http', '$state', '$window', 'RestApiService', function( $cookies, $http, $state, $window, $rest ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            const self = this;\n\n            this.countries = [\n\n               {\n\n                   code: 'IN',\n                   name: 'India'\n\n               },\n\n               {\n\n                   code: 'US',\n                   name: 'America'\n\n               }\n\n            ];\n\n            this.populateStateList = ( country ) => {\n\n               $rest.GetStates( country ).then( ( data ) => {\n\n                   this.states = data;\n\n               } );\n\n            };\n\n            this.cancel = () => {\n\n               $state.go( 'dashboard' );\n\n            };\n\n            this.NewConference = () => {\n\n               this.processing = true;\n\n               const dataObject = {\n\n                   token: data.token,\n                   guid: data.guid,\n                   registration: {\n\n                       name: self.conference.registration.facultyAdvisor.firstName + ' ' + self.conference.registration.facultyAdvisor.lastName,\n                       address: {\n\n                           street: self.conference.registration.address.street,\n                           city: self.conference.registration.address.city,\n                           pin: self.conference.registration.address.pin,\n                           state: self.conference.registration.address.state,\n                           country: self.conference.registration.address.country,\n\n                       },\n\n                       facultyAdvisor: {\n\n                           name: self.conference.registration.facultyAdvisor.firstName + ' ' + self.conference.registration.facultyAdvisor.lastName,\n                           mobileNumber: self.conference.registration.facultyAdvisor.mobile,\n                           landlineNumber: self.conference.registration.facultyAdvisor.landline,\n                           email: self.conference.registration.facultyAdvisor.email\n\n                       }\n\n                   }\n\n               };\n\n               $rest.CreateConference( dataObject ).then( ( data ) => {\n\n                    if( data.data.statusCode === 200 ) {\n\n                        this.processing = false;\n                        $state.go( 'dashboard' );\n\n                    } else {\n\n                        this.isError = true;\n                        this.errorMessage = data.data.data.message;\n\n                    }\n\n               } ).catch( ( data ) => {\n\n                  this.isError = true;\n                  this.errorMessage = data.message;\n\n               } );\n\n            };\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'NewUserController', [ '$cookies', '$http', '$state', '$window', 'RestApiService', 'CryptoService', 'lodash', function( $cookies, $http, $state, $window, $rest, $crypto, _ ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data      = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            const self = this;\n\n            this.NewUser = () => {\n\n               this.processing = true;\n\n               const hash = $crypto.getHmac( ( this.user.username + this.user.email ), data.guid );\n\n               const dataObject = {\n\n                   token: data.token,\n                   guid: data.guid,\n                   hash,\n                   data: _.assign( this.user, this.metadata )\n\n               };\n\n               $rest.CreateUser( dataObject ).then( ( data ) => {\n\n                    if( data.data.statusCode === 200 ) {\n\n                        this.processing = false;\n                        this.isMessage = true;\n                        this.messageClass = {\n                            blue: true\n                        };\n                        this.messageHeader = \"User Added\";\n                        this.messageText = `The user ${ this.user.username } was successfully created.`;\n\n                        if( data.data.data && data.data.data.generatedPassword ) {\n\n                            this.messageText += ` The generated password is ${ data.data.data.generatedPassword }.`;\n\n                        }\n\n                    } else {\n\n                        this.processing = false;\n                        this.isMessage = true;\n                        this.messageClass = {\n                            red: true\n                        };\n                        this.messageHeader = \"An error was encountered\";\n                        this.messageText = data.message;\n\n                    }\n\n               } ).catch( ( data ) => {\n\n                   this.processing = false;\n                   this.isMessage = true;\n                   this.messageClass = {\n                       red: true\n                   };\n                   this.messageHeader = \"An error was encountered\";\n                   this.messageText = data.message;\n\n               } );\n\n            };\n\n       } ] );\n","angular\n    .module( 'app' )\n    .filter( 'reverse', () => {\n\n        return ( items ) => {\n\n            return items.slice().reverse();\n\n        };\n\n    } );\n","angular\n    .module( 'app' )\n    .factory( 'CryptoService', [ function() {\n\n        return {\n\n            getSha512: function( data ) {\n\n                var shaObj = new jsSHA( \"SHA-512\", \"TEXT\" );\n                shaObj.update( data );\n                return shaObj.getHash( \"HEX\" );\n\n            },\n\n            getHmac: function( data, key ) {\n\n                var shaObj = new jsSHA('SHA-512', \"TEXT\");\n                shaObj.setHMACKey( key, \"TEXT\");\n                shaObj.update( data );\n                return shaObj.getHMAC(\"HEX\");\n\n            }\n\n        };\n\n    } ] );\n","angular\n    .module( 'app' )\n    .factory( 'LoginService', [ '$cookies', 'RestApiService', '$state', '$q', function( $cookies, $rest, $state, $q ) {\n\n        return {\n\n            checkLogin() {\n\n                let isLoggedIn = $cookies.get( 'isLoggedIn' )\n                    , data     = ( $cookies.get( 'loginData' ) )\n                    , promise  = $q.defer();\n\n                if( isLoggedIn && data ) {\n\n                    data = JSON.parse( data );\n\n                    $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                        if( valid.valid ) {\n\n                            promise.resolve( {\n                                valid: true,\n                                data,\n                            } );\n\n                        }\n\n                    } ).catch( ( err ) => {\n\n                        promise.reject( {\n                            valid: true,\n                        } );\n\n                    } );\n\n                }\n\n                return promise.promise;\n\n            },\n\n            getLoginData() {\n\n                const data = JSON.parse( $cookies.get( 'loginData' ) );\n                return ( data );\n\n            }\n\n        };\n\n    } ] );\n","angular\n    .module( 'app' )\n    .factory( 'RestApiService', [ '$http', 'CryptoService', '$q', ( $http, $cryptoService, $q ) => {\n\n        const apiUrl = '{{@API_URL}}';\n\n        return {\n\n            IsValidToken( token ) {\n\n                const promise = $q.defer();\n\n                $http.get( `${ apiUrl }/auth/token/valid/${ token }` ).then( ( data ) => {\n\n                    promise.resolve( data.data.data );\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        valid: false,\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            Login( userObject ) {\n\n                const dataObject = {}\n                    , promise    = $q.defer();\n\n                dataObject.username = userObject.username;\n                dataObject.password = $cryptoService.getSha512( userObject.password );\n\n                $http.post( apiUrl + '/auth', dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data.token ) {\n\n                        promise.resolve( {\n\n                            token: data.data.data.token,\n                            guid : data.data.data.guid,\n                            role : data.data.data.role\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            loggedIn: false\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        loggedIn: false\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            ForgotPassword( userObject ) {\n\n                const dataObject = {}\n                    , promise    = $q.defer();\n\n                dataObject.username = userObject.username;\n\n                $http.post( apiUrl + '/forgot', dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve();\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetUser( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/users/${ data.guid }?token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data[ 0 ] );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetAllConferences( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/conferences?guid=${ data.guid }&token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetAllUsers( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/users?token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetAllConferencesForAllUsers( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/conferences/all?guid=${ data.guid }&token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetUnconfirmedCount( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/conferences/unconfirmed/count?guid=${ data.guid }&token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( {\n                            data: data.data.data\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetUnconfirmedConferences( data ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/conferences/unconfirmed/all?guid=${ data.guid }&token=${ data.token }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( {\n                            data: data.data.data\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetConference( dataIn ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/conferences/${ dataIn.conferenceGuid }?token=${ dataIn.token }&guid=${ dataIn.guid }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data[ 0 ] );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            Logout( dataIn ) {\n\n                const promise = $q.defer();\n\n                $http.post( apiUrl + '/deauth', {\n\n                    guid: dataIn.guid,\n                    token: dataIn.token,\n\n                } ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve( {\n\n                            statusCode: 200\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            GetStates( country ) {\n\n                const promise    = $q.defer();\n\n                $http.get( `${ apiUrl }/metadata/states/${ country }` ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data ) {\n\n                        promise.resolve( data.data.data );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            CreateConference( confUserObject ) {\n\n                const promise = $q.defer();\n\n                const dataObject = {\n\n                    token: confUserObject.token,\n                    guid: confUserObject.guid,\n                    data: {\n\n                        registration: confUserObject.registration,\n\n                    }\n\n                };\n\n                $http.post( apiUrl + '/conferences', dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve( {\n\n                            data: data.data,\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            DeleteConference( confObject ) {\n\n                const promise = $q.defer();\n\n                $http.delete( `${ apiUrl }/conferences/${ confObject.conferenceGuid }?token=${ confObject.token }&guid=${ confObject.guid }` ).then( ( data ) => {\n\n                    if( data.status === 200 || data.status === 201 ) {\n\n                        promise.resolve();\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            CreateUser( confUserObject ) {\n\n                const promise = $q.defer();\n\n                const dataObject = {\n\n                    token: confUserObject.token,\n                    data: confUserObject.data,\n                    hash: confUserObject.hash\n\n                };\n\n                $http.post( apiUrl + '/users', dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve( {\n\n                            data: data.data,\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            UpdateConference( confUserObject ) {\n\n                const promise = $q.defer();\n\n                const dataObject = {\n\n                    token: confUserObject.token,\n                    guid: confUserObject.guid,\n                    data: confUserObject.data\n\n                };\n\n                $http.put( apiUrl + '/conferences/' + confUserObject.conferenceGuid, dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve( {\n\n                            data: data.data,\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            ConfirmConference( confUserObject ) {\n\n                const promise = $q.defer();\n\n                const dataObject = {\n\n                    token: confUserObject.token,\n                    guid: confUserObject.guid,\n\n                };\n\n                $http.post( apiUrl + '/conferences/confirm/' + confUserObject.conferenceGuid, dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 && data.data.data.confirmationId ) {\n\n                        promise.resolve( {\n\n                            data: data.data,\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n            UnconfirmConference( confUserObject ) {\n\n                const promise = $q.defer();\n\n                const dataObject = {\n\n                    token: confUserObject.token,\n                    guid: confUserObject.guid,\n                    data: {\n                        isConfirmed: false,\n                        confirmationId: '',\n                    }\n\n                };\n\n                $http.put( apiUrl + '/conferences/' + confUserObject.conferenceGuid, dataObject ).then( ( data ) => {\n\n                    if( data.status === 200 ) {\n\n                        promise.resolve( {\n\n                            data: data.data,\n\n                        } );\n\n                    } else {\n\n                        promise.reject( {\n\n                            message: data.data.message,\n                            error: true\n\n                        } );\n\n                    }\n\n                } ).catch( ( data ) => {\n\n                    promise.reject( {\n\n                        message: data.data.message,\n                        error: true\n\n                    } );\n\n                } );\n\n                return promise.promise;\n\n            },\n\n        };\n\n    } ] );\n","angular.module( 'app' )\n       .controller( 'DelegateInformationFormController', [ '$cookies', '$http', '$stateParams', '$window', 'RestApiService', function( $cookies, $http, $stateParams, $window, $rest ) {\n\n           let isLoggedIn       = $cookies.get( 'isLoggedIn' )\n               , data           = $cookies.get( 'loginData' )\n               , conferenceGuid = $stateParams.guid;\n\n           if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n           }\n\n           this.guid = conferenceGuid;\n\n           $rest.GetConference( {\n\n               conferenceGuid,\n               token: data.token,\n               guid: data.guid,\n\n           } ).then( ( data ) => {\n\n               this.conferenceData = data;\n\n               this.fieldClasses = {\n\n                   'two fields': ( this.conferenceData.countryAllotment ),\n                   'field': ( !this.conferenceData.countryAllotment )\n\n               };\n\n           } );\n\n           this.AddDelegate = () => {\n\n               if( this.conferenceData.delegateInformation && this.conferenceData.delegateInformation.delegates && this.conferenceData.delegateInformation.delegates.length === 17 ) {\n\n                   this.isMessage = true;\n                   this.messageHeader = \"Warning!\";\n                   this.messageText = \"You can not add any more delegates. The maximum number of delegates per delegation is 17.\";\n                   this.messageClass = {\n\n                       'yellow': true,\n\n                   };\n\n                   return false;\n\n               }\n\n               this.conferenceData.delegateInformation = ( () => {\n\n                   return (\n\n                       ( this.conferenceData.delegateInformation ) ? ( ( this.conferenceData.delegateInformation.delegates ) ? this.conferenceData.delegateInformation : { delegates: [] } ) : { delegates: [] }\n\n                   )\n\n               } )();\n\n               this.conferenceData.delegateInformation.delegates.push( {\n\n                   name: 'Delegate Name'\n\n               } );\n\n           };\n\n           this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: this.guid,\n                   data: this.conferenceData\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n           };\n\n       } ] );\n","angular.module( 'app' )\n       .controller( 'GaCrisisFormController', [ 'lodash', '$cookies', '$http', '$stateParams', '$window', 'RestApiService', function( _, $cookies, $http, $stateParams, $window, $rest ) {\n\n           let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n           if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n           }\n\n           const conferenceGuid = $stateParams.guid;\n           this.guid = conferenceGuid;\n\n           $rest.GetConference( {\n\n               conferenceGuid,\n               token: data.token,\n               guid: data.guid,\n\n           } ).then( ( data ) => {\n\n               this.conferenceData = data;\n\n           } );\n\n           this.AddDelegate = () => {\n\n               if( this.conferenceData.gaCrisis && this.conferenceData.gaCrisis.delegates && this.conferenceData.gaCrisis.delegates.length === 7 ) {\n\n                   this.isMessage = true;\n                   this.messageHeader = \"Warning!\";\n                   this.messageText = \"You can not add any more delegates. The maximum number of delegates per delegation is 7.\";\n                   this.messageClass = {\n\n                       'yellow': true,\n\n                   };\n\n                   return false;\n\n               }\n\n               this.conferenceData.gaCrisis = ( () => {\n\n                   return (\n\n                       ( this.conferenceData.gaCrisis ) ? ( ( this.conferenceData.gaCrisis.delegates ) ? this.conferenceData.gaCrisis : { delegates: [] } ) : { delegates: [] }\n\n                   )\n\n               } )();\n\n               this.conferenceData.gaCrisis.delegates.push( {\n\n                   name: 'Delegate Name'\n\n               } );\n\n           };\n\n           this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: this.guid,\n                   data: this.conferenceData\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n           };\n\n       } ] );\n","angular.module( 'app' )\n       .controller( 'MedicalHistoryFormController', [ 'lodash', '$cookies', '$http', '$stateParams', '$window', 'RestApiService', function( _, $cookies, $http, $stateParams, $window, $rest ) {\n\n           let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n           if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n           }\n\n           const conferenceGuid = $stateParams.guid;\n           this.guid = conferenceGuid;\n\n           $rest.GetConference( {\n\n               conferenceGuid,\n               token: data.token,\n               guid: data.guid,\n\n           } ).then( ( data ) => {\n\n               this.conferenceData = data;\n\n           } );\n\n           this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: this.guid,\n                   data: this.conferenceData\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n           };\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'RegistrationFormController', [ '$cookies', '$http', '$stateParams', '$window', 'RestApiService', function( $cookies, $http, $stateParams, $window, $rest ) {\n\n            const guid = $stateParams.guid;\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            this.guid = $stateParams.guid;\n\n            $rest.GetConference( {\n\n               token: data.token,\n               guid: data.guid,\n               conferenceGuid: guid\n\n            } ).then( ( data ) => {\n\n               this.conference = data;\n\n            } );\n\n            this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: guid,\n                   data: this.conference\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n            };\n\n       } ] );\n","angular.module( 'app' )\n        .controller( 'TravelArrangementsFormController', [ '$cookies', '$http', '$stateParams', '$window', 'RestApiService', function( $cookies, $http, $stateParams, $window, $rest ) {\n\n            let isLoggedIn = $cookies.get( 'isLoggedIn' )\n               , data     = $cookies.get( 'loginData' );\n\n            if( isLoggedIn && data ) {\n\n               data = JSON.parse( data );\n\n               $rest.IsValidToken( data.token ).then( ( valid ) => {\n\n                   if( !valid.valid ) {\n\n                       $state.go( 'home' );\n\n                   }\n\n               } ).catch( ( err ) => {\n\n                   $state.go( 'home' );\n\n               } );\n\n            }\n\n            const conferenceGuid = $stateParams.guid;\n            this.guid = conferenceGuid;\n\n            $rest.GetConference( {\n\n               conferenceGuid,\n               token: data.token,\n               guid: data.guid,\n\n            } ).then( ( data ) => {\n\n               this.conferenceData = data;\n\n               if( this.conferenceData.travelArrangements ) {\n\n                   if( this.conferenceData.travelArrangements.onward ) {\n\n                       if( this.conferenceData.travelArrangements.onward.arrivalDate ) {\n                           this.conferenceData.travelArrangements.onward.arrivalDate = new Date( this.conferenceData.travelArrangements.onward.arrivalDate );\n                       }\n\n                       if( this.conferenceData.travelArrangements.onward.departureDate ) {\n                           this.conferenceData.travelArrangements.onward.departureDate = new Date( this.conferenceData.travelArrangements.onward.departureDate );\n                       }\n\n                   }\n\n                   if( this.conferenceData.travelArrangements.returnJourney ) {\n\n                       if( this.conferenceData.travelArrangements.returnJourney.arrivalDate ) {\n                           this.conferenceData.travelArrangements.returnJourney.arrivalDate = new Date( this.conferenceData.travelArrangements.returnJourney.arrivalDate );\n                       }\n\n                       if( this.conferenceData.travelArrangements.returnJourney.departureDate ) {\n                           this.conferenceData.travelArrangements.returnJourney.departureDate = new Date( this.conferenceData.travelArrangements.returnJourney.departureDate );\n                       }\n\n                   }\n\n               }\n\n            } );\n\n\n            this.UpdateForm = () => {\n\n               this.processing = true;\n\n               $rest.UpdateConference( {\n\n                   token: data.token,\n                   guid: data.guid,\n                   conferenceGuid: this.guid,\n                   data: this.conferenceData\n\n               } ).then( ( dataIn ) => {\n\n                   if( dataIn.data.statusCode === 200 ) {\n\n                       this.processing = false;\n\n                       this.isMessage = true;\n                       this.messageHeader = \"Successful!\";\n                       this.messageText = \"All the details were successfully updated!\";\n                       this.messageClass = {\n\n                           'blue': true,\n\n                       };\n\n                   }\n\n               } );\n\n            };\n\n       } ] );\n"]}